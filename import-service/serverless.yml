service: import-service
frameworkVersion: "3"
useDotenv: true
plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        functionArn: arn:aws:lambda:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:function:${self:provider.environment.AUTHORIZER_NAME}
  environment:
    REGION: ${self:provider.region}
    ACCOUNT_ID: ${env:ACCOUNT_ID}
    BUCKET_NAME: ${env:BUCKET_NAME}
    QUEUE_NAME: ${env:QUEUE_NAME}
    SQS_URL: ${env:SQS_URL}
    AUTHORIZER_NAME: ${env:AUTHORIZER_NAME}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "s3:ListBucket"
          Resource: "arn:aws:s3:::${self:provider.environment.BUCKET_NAME}"
        - Effect: Allow
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*"
        - Effect: Allow
          Action: "sqs:*"
          Resource: "arn:aws:sqs:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:${self:provider.environment.QUEUE_NAME}"

functions:
  importProductsFile:
    handler: src/handlers/importProductsFile.importProductsFile
    events:
      - httpApi:
          method: GET
          path: /import
          authorizer:
            name: basicAuthorizer
  importFileParser:
    handler: src/handlers/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded
            - suffix: .csv
          existing: true
